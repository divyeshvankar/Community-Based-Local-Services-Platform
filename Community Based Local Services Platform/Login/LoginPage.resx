<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>